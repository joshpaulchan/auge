version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.7
        environment:
          PIPENV_VENV_IN_PROJECT: "true"
          DB_HOST: localhost
          DB_USER: root
          DB_NAME: circle_test
      - image: circleci/postgres:9.6 # needs a db for tests
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    working_directory: ~/app
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache: # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name:
          command: |
            sudo pip install pipenv
            pipenv install --dev
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Run Tests
          command: |
            pipenv run pytest
  build:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      # prepare environment for building docker image
      - setup_remote_docker
      - run:
          name: Setup Environment Variables
          command: |
            echo 'export PROJECT_ID=gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}' >> $BASH_ENV
      # authorize gcloud
      - run:
          name: Authenticate to Google Cloud
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud auth configure-docker
      # deploy the image
      - run:
          name: Build, Tag, and Push Docker Image
          command: ./docker_build_tag.sh $PROJECT_ID $CIRCLE_BRANCH
workflows:
  version: 2
  build_and_test:
    jobs:
      - test
      - build:
          requires:
            - test
